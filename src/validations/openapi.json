{
  "openapi": "3.0.1",
  "info": {
    "title": "Rederly",
    "description": "TODO",
    "termsOfService": "TODO",
    "contact": {
      "email": "support@rederly.com"
    },
    "license": {
      "name": "GNU General Public License v3.0",
      "url": "https://github.com/rederlyhq/backend/blob/dev/LICENSE.md"
    },
    "version": "1.10.2"
  },
  "externalDocs": {
    "description": "TODO",
    "url": "https://rederly.com"
  },
  "servers": [
    {
      "url": "https://app.rederly.com/backend-api"
    }
  ],
  "tags": [
    {
      "description": "Course control",
      "name": "Courses"
    },
    {
      "description": "User access",
      "externalDocs": {
        "description": "None available",
        "url": "https://app.rederly.com"
      },
      "name": "Users"
    }
  ],
  "paths": {
    "/courses/index": {
      "post": {
        "tags": [
          "Courses"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "curriculumId": {
                    "type": "number",
                    "description": "The curriculum this course is associated with.",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the new course.",
                    "example": "Schema Builder 101"
                  },
                  "code": {
                    "type": "string",
                    "description": "The code for the course.",
                    "example": "ABC_123"
                  },
                  "start": {
                    "type": "string",
                    "format": "date-time",
                    "ts-type": "date",
                    "description": "When the course is scheduled to start.",
                    "example": "1994-01-26T14:30:00.000Z"
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time",
                    "ts-type": "date",
                    "description": "When the course is scheduled to start.",
                    "example": "2019-09-28T02:00:00.000Z"
                  },
                  "sectionCode": {
                    "type": "string",
                    "description": "The code for this specific section of the course.",
                    "example": "abc"
                  },
                  "semesterCode": {
                    "type": "string",
                    "description": "The code for the semester this course takes place in.",
                    "example": "def"
                  },
                  "textbooks": {
                    "type": "string",
                    "description": "A text field for any textbook information you want to include.",
                    "example": "Mat101 textbook"
                  }
                },
                "required": [
                  "name",
                  "code",
                  "start",
                  "end",
                  "sectionCode",
                  "semesterCode",
                  "textbooks"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "8787": {
                      "type": "string",
                      "description": "Let's respond!",
                      "example": "Responding"
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "description": "No description set"
          }
        }
      }
    },
    "/courses/{id}": {
      "get": {
        "tags": [
          "Courses"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "number",
              "description": "The id.",
              "example": "1"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "8787": {
                      "type": "string",
                      "description": "Let's respond!",
                      "example": "Responding"
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "description": "No description set"
          }
        }
      }
    },
    "/users/forgot-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "8787": {
                      "type": "string",
                      "description": "Let's respond!",
                      "example": "Responding"
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "description": "No description set"
          }
        }
      }
    },
    "/users/impersonate": {
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The role that you intend to impersonate.",
                    "example": null
                  }
                },
                "required": [
                  "role"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/test/{motmot}/{second}": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tomtom": {
                    "type": "string",
                    "description": "A text field for any textbook information you want to include.",
                    "example": "Mat101 textbook"
                  },
                  "tomnum": {
                    "type": "number",
                    "description": "A required number",
                    "example": "req num"
                  },
                  "tomdate": {
                    "type": "string",
                    "format": "date-time",
                    "tsType": "Date"
                  },
                  "tomdefaultdate": {
                    "type": "string",
                    "format": "date-time",
                    "tsType": "Date",
                    "default": "1994-01-26T14:30:00.000Z"
                  },
                  "tomcomplex": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "string",
                        "enum": [
                          "me"
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "tomdefaultdate"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "motmot",
            "schema": {
              "type": "string",
              "description": "Path parameters!!!",
              "example": "This is a path parameter"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "second",
            "schema": {
              "type": "string",
              "description": "second parameters!!!",
              "example": "22222"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "1231253",
            "schema": {
              "type": "string",
              "description": "321321",
              "example": "987987"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "abcdbc",
            "schema": {
              "type": "string",
              "description": "This is my query param",
              "example": "query param!"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "8787": {
                      "type": "string",
                      "description": "Let's respond!",
                      "example": "Responding"
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "description": "No description set"
          }
        }
      }
    }
  }
}